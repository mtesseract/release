base_images:
  base:
    name: "4.11"
    namespace: ocp
    tag: base
  cli:
    name: "4.11"
    namespace: ocp
    tag: cli
  openshift_release_golang-1.17:
    name: release
    namespace: openshift
    tag: golang-1.17
binary_build_commands: GOARGS="-mod=mod" make binary
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.17
images:
- dockerfile_literal: |-
    FROM registry.ci.openshift.org/openshift/release:golang-1.17 AS builder
    WORKDIR /go/src/github.com/stackrox/acs-fleet-manager
    COPY . .
    RUN GOARGS="-mod=mod" make binary
    FROM registry.ci.openshift.org/openshift/origin-v4.5:base
    COPY --from=builder /go/src/github.com/stackrox/acs-fleet-manager/fleet-manager /usr/bin/
    COPY --from=builder /go/src/github.com/stackrox/acs-fleet-manager/fleetshard-sync /usr/bin/
  from: base
  inputs:
    openshift_release_golang-1.17:
      as:
      - registry.ci.openshift.org/openshift/release:golang-1.17
  to: acs-fleet-manager
promotion:
  namespace: acs-fleet-manager
  tag: latest
releases:
  initial:
    integration:
      name: "4.11"
      namespace: ocp
  latest:
    integration:
      include_built_images: true
      name: "4.11"
      namespace: ocp
resources:
  '*':
    requests:
      cpu: 2000m
      memory: 4000Mi
tests:
- as: e2e
  cluster_claim:
    architecture: amd64
    as: custom
    cloud: aws
    owner: openshift-ci
    product: ocp
    timeout: 1h0m0s
    version: "4.7"
  steps:
    test:
    - as: claim
      commands: |
        echo "fleet binaries:"
        ls /usr/bin/fleet* || true
        echo
        echo "bin image: "
        echo "$BINARIES"
        echo
        echo "docker images -a:"
        docker images -a || true
        printenv KUBECONFIG
        echo
        oc get node
        oc config view
        oc whoami
        echo
        oc config view
        echo
        echo "Applying resources:"
        echo
        set +e
        oc create ns rhacs-operator
        oc apply -f - <<EOF
        apiVersion: operators.coreos.com/v1
        kind: OperatorGroup
        metadata:
          name: rhacs-operator
          namespace: rhacs-operator
        EOF
        oc apply -f - <<EOF
        apiVersion: operators.coreos.com/v1alpha1
        kind: Subscription
        metadata:
          name: rhacs-operator
          namespace: rhacs-operator
        spec:
          channel: latest
          installPlanApproval: Automatic
          name: rhacs-operator
          source: redhat-operators
          sourceNamespace: openshift-marketplace
          startingCSV: "rhacs-operator.v3.70.0"
        EOF
        sleep 60
        echo "namespaces:"
        oc get ns
        echo "all resources in rhacs-operator ns:"
        oc -n rhacs-operator get all
      from: stable-custom:cli
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
      dependencies:
      - name: "bin"
        env: "BINARIES"
    workflow: generic-claim
zz_generated_metadata:
  branch: main
  org: stackrox
  repo: acs-fleet-manager
